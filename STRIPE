## STRIPE/payments
 - We use Stripe Connect to support the marketplace aspect of the application.
 - We create **managed accounts**, which are Accounts in Stripe that we solely manage for the user.
 - When Payments occur between our Managed Accounts, they incur a Stripe fee and an Application Fee
 - Transactions fees with Stripe are 30c+2.9% every transaction

Read this [Stripe recipie for an app](https://stripe.com/docs/recipes/on-demand-app) as background info.

Here's our proposed payments flow:
 1. Open a special payments registration form (e.g. when users decide to go for a meal)
 2. Enter details - Name, Address, DOB. Also they mention "Again, the contractor would also need to formally agree to Stripe’s terms of service, and you would note the timestamp and the contractor’s IP address as a record of that÷"
 3. Submit to server -

 ```
 curl https://api.stripe.com/v1/accounts \
   -u {YOUR_SECRET_KEY}: \
   -d managed=true \
   -d country=AU \

   -d legal_entity[type]=individual \
   -d legal_entity[first_name]=Jane \
   -d legal_entity[last_name]=Doe \
   -d legal_entity[address][city]="San Francisco" \

   -d "/* Other address fields */" \
   -d legal_entity[dob][day]=31 \
   -d legal_entity[dob][month]=12 \
   -d legal_entity[dob][year]=1969 \

   -d tos_acceptance[date]=1453296505 \
   -d tos_acceptance[ip]="8.8.8.8"
 ```
 4. Stripe replies:
 	The result of a successful API call will be the account information (not all fields are shown):

{
  "id": "acct_12QkqYGSOD4VcegJ",
  "keys": {
    "secret": "sk_live_AxSI9q6ieYWjGIeRbURf6EG0",
    "publishable": "pk_live_h9xguYGf2GcfytemKs5tHrtg"
  },
  "managed": true,
  "charges_enabled": true,
  "transfers_enabled": false,
  ...
  "legal_entity": {
    ...
    "verification": {
      "status": "pending",
      ...
    }
  },
  "verification": {
    "fields_needed": ['bank_account'],
    "due_by": null,
    "contacted": false
  }
}
```

  5. Then they input their banking details through their Stripe.js web plugin. Then we get their bank_account_token

"Stripe tokens can only be used once, but that doesn't mean you have to request your customer's card details for every payment. Stripe provides a Customer object type that makes it easy to save this—and other—information for later use."



```
curl https://api.stripe.com/v1/accounts/acct_12QkqYGSOD4VcegJ \
   -u {YOUR_SECRET_KEY}: \
   -d bank_account={TOKEN}
```

and response:

```
{
  ...
  "transfers_enabled": true,
  ...
}
```

## When charging guests and paying chefs
ITS MUCH EASIER TO LOOK AT THE API TECHNICAL DOCS https://stripe.com/docs/api#

The way Uber et al. does it is that every user is assigned a Stripe managed account (as in, we manage it), payments are made between the managed accounts (there are two ways for this), and drivers are paid out once per week.

There are two ways to create a charge on behalf of a connected account:

 1. Create the charge directly on the connected account.
 2. Create the charge on the platform’s account, but set a destination parameter identifying the Stripe account that should receive the funds from the payment.

With the first approach, the connected account is responsible for the fees, refunds, and chargebacks. The payment itself will appear as a charge in the connected account.

The latter, new approach provides much more customizability but makes the platform account responsible for the fees, refunds, and chargebacks. The payment appears as a charge in the platform account, along with a transfer from the platform account to the connected account.


curl https://api.stripe.com/v1/charges \
   -u {YOUR_SECRET_KEY}: \
   -d amount=1000 \
   -d currency=usd \
   -d source={TOKEN} \
   -d destination=acct_12QkqYGSOD4VcegJ \
   -d application_fee=200


createToken converts sensitive card data to a single-use token which you can safely pass to your server to charge the user


curl https://api.stripe.com/v1/charges \
   -u {PLATFORM_SECRET_KEY}: \
   -H "Stripe-Account: {CONNECTED_STRIPE_ACCOUNT_ID}" \
   -d amount=1000 \
   -d currency=usd \
   -d source={TOKEN} \
   -d description="payinguser@example.com" \
   -d application_fee=123

curl https://api.stripe.com/v1/charges \
   -u {YOUR_SECRET_KEY}: \
   -d amount=1000 \
   -d currency=aud \
   -d source={TOKEN} \
   -d destination=acct_12QkqYGSOD4VcegJ \
   -d application_fee=200

The customer is being charged $10.00 [for the meal], and you’re taking a $2.00 application fee. The Stripe fees (of 59 cents) will come out of your account; you’ll net $1.41. The customer receives $8.00. 

## When paying chefs





